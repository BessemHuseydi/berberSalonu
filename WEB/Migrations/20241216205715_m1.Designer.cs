// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WEB.Models;

#nullable disable

namespace WEB.Migrations
{
    [DbContext(typeof(BerberContext))]
    [Migration("20241216205715_m1")]
    partial class m1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WEB.Models.Calisan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ExperienceYears")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SalonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SalonId");

                    b.ToTable("Calisanlar");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ExperienceYears = 5,
                            Name = "Zeynep Aydın",
                            Position = "Kuaför",
                            SalonId = 1
                        },
                        new
                        {
                            Id = 2,
                            ExperienceYears = 6,
                            Name = "Ali Yılmaz",
                            Position = "Berber",
                            SalonId = 1
                        },
                        new
                        {
                            Id = 3,
                            ExperienceYears = 4,
                            Name = "Selin Arslan",
                            Position = "Saç Stilisti",
                            SalonId = 1
                        },
                        new
                        {
                            Id = 4,
                            ExperienceYears = 3,
                            Name = "Ayşe Demir",
                            Position = "Makyaj Uzmanı",
                            SalonId = 1
                        },
                        new
                        {
                            Id = 5,
                            ExperienceYears = 7,
                            Name = "Mehmet Kaya",
                            Position = "Masaj Terapisti",
                            SalonId = 1
                        },
                        new
                        {
                            Id = 6,
                            ExperienceYears = 3,
                            Name = "Hülya Akın",
                            Position = "Manikürist",
                            SalonId = 2
                        },
                        new
                        {
                            Id = 7,
                            ExperienceYears = 5,
                            Name = "Fatma Çelik",
                            Position = "Pedikürist",
                            SalonId = 2
                        },
                        new
                        {
                            Id = 8,
                            ExperienceYears = 8,
                            Name = "Ahmet Şen",
                            Position = "Berber",
                            SalonId = 2
                        },
                        new
                        {
                            Id = 9,
                            ExperienceYears = 6,
                            Name = "Burcu Arslan",
                            Position = "Cilt Bakım Uzmanı",
                            SalonId = 2
                        },
                        new
                        {
                            Id = 10,
                            ExperienceYears = 4,
                            Name = "Burak Şen",
                            Position = "Pedikürist",
                            SalonId = 3
                        },
                        new
                        {
                            Id = 11,
                            ExperienceYears = 7,
                            Name = "Selim Kaya",
                            Position = "Saç Stilisti",
                            SalonId = 3
                        },
                        new
                        {
                            Id = 12,
                            ExperienceYears = 2,
                            Name = "Buse Güneş",
                            Position = "Kuaför",
                            SalonId = 3
                        },
                        new
                        {
                            Id = 13,
                            ExperienceYears = 6,
                            Name = "Kemal Demir",
                            Position = "Berber",
                            SalonId = 3
                        },
                        new
                        {
                            Id = 14,
                            ExperienceYears = 3,
                            Name = "Aycan Yıldız",
                            Position = "Makyaj Uzmanı",
                            SalonId = 3
                        },
                        new
                        {
                            Id = 15,
                            ExperienceYears = 6,
                            Name = "Elif Güneş",
                            Position = "Cilt Bakım Uzmanı",
                            SalonId = 4
                        },
                        new
                        {
                            Id = 16,
                            ExperienceYears = 8,
                            Name = "Hasan Çelik",
                            Position = "Masaj Terapisti",
                            SalonId = 4
                        },
                        new
                        {
                            Id = 17,
                            ExperienceYears = 5,
                            Name = "Fatih Arslan",
                            Position = "Berber",
                            SalonId = 4
                        },
                        new
                        {
                            Id = 18,
                            ExperienceYears = 4,
                            Name = "Burcu Kaya",
                            Position = "Kuaför",
                            SalonId = 4
                        },
                        new
                        {
                            Id = 19,
                            ExperienceYears = 3,
                            Name = "Zehra Şahin",
                            Position = "Makyaj Uzmanı",
                            SalonId = 4
                        },
                        new
                        {
                            Id = 20,
                            ExperienceYears = 7,
                            Name = "Selim Kaya",
                            Position = "Saç Stilisti",
                            SalonId = 5
                        },
                        new
                        {
                            Id = 21,
                            ExperienceYears = 3,
                            Name = "Merve Şen",
                            Position = "Manikürist",
                            SalonId = 5
                        },
                        new
                        {
                            Id = 22,
                            ExperienceYears = 8,
                            Name = "Ahmet Çelik",
                            Position = "Berber",
                            SalonId = 5
                        },
                        new
                        {
                            Id = 23,
                            ExperienceYears = 5,
                            Name = "Fatma Yıldız",
                            Position = "Pedikürist",
                            SalonId = 5
                        },
                        new
                        {
                            Id = 24,
                            ExperienceYears = 8,
                            Name = "Kemal Yılmaz",
                            Position = "Berber",
                            SalonId = 6
                        },
                        new
                        {
                            Id = 25,
                            ExperienceYears = 6,
                            Name = "Zehra Akın",
                            Position = "Kuaför",
                            SalonId = 6
                        },
                        new
                        {
                            Id = 26,
                            ExperienceYears = 4,
                            Name = "Aycan Arslan",
                            Position = "Makyaj Uzmanı",
                            SalonId = 6
                        },
                        new
                        {
                            Id = 27,
                            ExperienceYears = 7,
                            Name = "Emre Şen",
                            Position = "Masaj Terapisti",
                            SalonId = 6
                        },
                        new
                        {
                            Id = 28,
                            ExperienceYears = 4,
                            Name = "Merve Şen",
                            Position = "Makyaj Uzmanı",
                            SalonId = 7
                        },
                        new
                        {
                            Id = 29,
                            ExperienceYears = 5,
                            Name = "Fatih Çelik",
                            Position = "Masaj Terapisti",
                            SalonId = 7
                        },
                        new
                        {
                            Id = 30,
                            ExperienceYears = 6,
                            Name = "Büşra Arslan",
                            Position = "Kuaför",
                            SalonId = 7
                        },
                        new
                        {
                            Id = 31,
                            ExperienceYears = 9,
                            Name = "Hasan Kaya",
                            Position = "Berber",
                            SalonId = 7
                        },
                        new
                        {
                            Id = 32,
                            ExperienceYears = 5,
                            Name = "Fatih Çelik",
                            Position = "Masaj Terapisti",
                            SalonId = 8
                        },
                        new
                        {
                            Id = 33,
                            ExperienceYears = 4,
                            Name = "Burcu Yıldız",
                            Position = "Kuaför",
                            SalonId = 8
                        },
                        new
                        {
                            Id = 34,
                            ExperienceYears = 7,
                            Name = "Emre Kaya",
                            Position = "Berber",
                            SalonId = 8
                        },
                        new
                        {
                            Id = 35,
                            ExperienceYears = 3,
                            Name = "Selin Şen",
                            Position = "Makyaj Uzmanı",
                            SalonId = 8
                        },
                        new
                        {
                            Id = 36,
                            ExperienceYears = 10,
                            Name = "Ahmet Arslan",
                            Position = "Berber",
                            SalonId = 9
                        },
                        new
                        {
                            Id = 37,
                            ExperienceYears = 5,
                            Name = "Zehra Demir",
                            Position = "Kuaför",
                            SalonId = 9
                        },
                        new
                        {
                            Id = 38,
                            ExperienceYears = 7,
                            Name = "Kemal Şahin",
                            Position = "Masaj Terapisti",
                            SalonId = 9
                        },
                        new
                        {
                            Id = 39,
                            ExperienceYears = 4,
                            Name = "Fatma Çelik",
                            Position = "Makyaj Uzmanı",
                            SalonId = 9
                        },
                        new
                        {
                            Id = 40,
                            ExperienceYears = 2,
                            Name = "Ayşe Can",
                            Position = "Manikürist",
                            SalonId = 10
                        },
                        new
                        {
                            Id = 41,
                            ExperienceYears = 7,
                            Name = "Selim Kaya",
                            Position = "Saç Stilisti",
                            SalonId = 10
                        },
                        new
                        {
                            Id = 42,
                            ExperienceYears = 8,
                            Name = "Hasan Şen",
                            Position = "Berber",
                            SalonId = 10
                        },
                        new
                        {
                            Id = 43,
                            ExperienceYears = 3,
                            Name = "Büşra Çelik",
                            Position = "Makyaj Uzmanı",
                            SalonId = 10
                        });
                });

            modelBuilder.Entity("WEB.Models.CalismaSaati", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CalisanId")
                        .HasColumnType("int");

                    b.Property<string>("DayOfWeek")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("CalisanId");

                    b.ToTable("CalismaSaatleri");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CalisanId = 1,
                            DayOfWeek = "Pazartesi",
                            EndTime = new TimeSpan(0, 18, 0, 0, 0),
                            StartTime = new TimeSpan(0, 9, 0, 0, 0)
                        },
                        new
                        {
                            Id = 2,
                            CalisanId = 1,
                            DayOfWeek = "Salı",
                            EndTime = new TimeSpan(0, 18, 0, 0, 0),
                            StartTime = new TimeSpan(0, 9, 0, 0, 0)
                        },
                        new
                        {
                            Id = 3,
                            CalisanId = 1,
                            DayOfWeek = "Çarşamba",
                            EndTime = new TimeSpan(0, 18, 0, 0, 0),
                            StartTime = new TimeSpan(0, 9, 0, 0, 0)
                        },
                        new
                        {
                            Id = 4,
                            CalisanId = 1,
                            DayOfWeek = "Perşembe",
                            EndTime = new TimeSpan(0, 18, 0, 0, 0),
                            StartTime = new TimeSpan(0, 9, 0, 0, 0)
                        },
                        new
                        {
                            Id = 5,
                            CalisanId = 1,
                            DayOfWeek = "Cuma",
                            EndTime = new TimeSpan(0, 18, 0, 0, 0),
                            StartTime = new TimeSpan(0, 9, 0, 0, 0)
                        },
                        new
                        {
                            Id = 6,
                            CalisanId = 1,
                            DayOfWeek = "Cumartesi",
                            EndTime = new TimeSpan(0, 16, 0, 0, 0),
                            StartTime = new TimeSpan(0, 10, 0, 0, 0)
                        },
                        new
                        {
                            Id = 7,
                            CalisanId = 2,
                            DayOfWeek = "Pazartesi",
                            EndTime = new TimeSpan(0, 19, 0, 0, 0),
                            StartTime = new TimeSpan(0, 10, 0, 0, 0)
                        },
                        new
                        {
                            Id = 8,
                            CalisanId = 2,
                            DayOfWeek = "Salı",
                            EndTime = new TimeSpan(0, 19, 0, 0, 0),
                            StartTime = new TimeSpan(0, 10, 0, 0, 0)
                        },
                        new
                        {
                            Id = 9,
                            CalisanId = 2,
                            DayOfWeek = "Çarşamba",
                            EndTime = new TimeSpan(0, 19, 0, 0, 0),
                            StartTime = new TimeSpan(0, 10, 0, 0, 0)
                        },
                        new
                        {
                            Id = 10,
                            CalisanId = 2,
                            DayOfWeek = "Perşembe",
                            EndTime = new TimeSpan(0, 19, 0, 0, 0),
                            StartTime = new TimeSpan(0, 10, 0, 0, 0)
                        },
                        new
                        {
                            Id = 11,
                            CalisanId = 2,
                            DayOfWeek = "Cuma",
                            EndTime = new TimeSpan(0, 19, 0, 0, 0),
                            StartTime = new TimeSpan(0, 10, 0, 0, 0)
                        },
                        new
                        {
                            Id = 12,
                            CalisanId = 2,
                            DayOfWeek = "Cumartesi",
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            StartTime = new TimeSpan(0, 10, 30, 0, 0)
                        },
                        new
                        {
                            Id = 13,
                            CalisanId = 3,
                            DayOfWeek = "Pazartesi",
                            EndTime = new TimeSpan(0, 17, 30, 0, 0),
                            StartTime = new TimeSpan(0, 8, 30, 0, 0)
                        },
                        new
                        {
                            Id = 14,
                            CalisanId = 3,
                            DayOfWeek = "Salı",
                            EndTime = new TimeSpan(0, 17, 30, 0, 0),
                            StartTime = new TimeSpan(0, 8, 30, 0, 0)
                        },
                        new
                        {
                            Id = 15,
                            CalisanId = 3,
                            DayOfWeek = "Çarşamba",
                            EndTime = new TimeSpan(0, 17, 30, 0, 0),
                            StartTime = new TimeSpan(0, 8, 30, 0, 0)
                        },
                        new
                        {
                            Id = 16,
                            CalisanId = 3,
                            DayOfWeek = "Perşembe",
                            EndTime = new TimeSpan(0, 17, 30, 0, 0),
                            StartTime = new TimeSpan(0, 8, 30, 0, 0)
                        },
                        new
                        {
                            Id = 17,
                            CalisanId = 3,
                            DayOfWeek = "Cuma",
                            EndTime = new TimeSpan(0, 17, 30, 0, 0),
                            StartTime = new TimeSpan(0, 8, 30, 0, 0)
                        },
                        new
                        {
                            Id = 18,
                            CalisanId = 3,
                            DayOfWeek = "Cumartesi",
                            EndTime = new TimeSpan(0, 14, 0, 0, 0),
                            StartTime = new TimeSpan(0, 9, 0, 0, 0)
                        });
                });

            modelBuilder.Entity("WEB.Models.Hizmet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DurationMinutes")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhotoPath")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Hizmetler");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DurationMinutes = 30,
                            Name = "Saç Kesimi",
                            Price = 50m
                        },
                        new
                        {
                            Id = 2,
                            DurationMinutes = 45,
                            Name = "Manikür",
                            Price = 80m
                        },
                        new
                        {
                            Id = 3,
                            DurationMinutes = 60,
                            Name = "Pedikür",
                            Price = 100m
                        },
                        new
                        {
                            Id = 4,
                            DurationMinutes = 90,
                            Name = "Saç Boyama",
                            Price = 200m
                        },
                        new
                        {
                            Id = 5,
                            DurationMinutes = 120,
                            Name = "Cilt Bakımı",
                            Price = 150m
                        },
                        new
                        {
                            Id = 6,
                            DurationMinutes = 25,
                            Name = "Sakal Kesimi",
                            Price = 40m
                        },
                        new
                        {
                            Id = 7,
                            DurationMinutes = 60,
                            Name = "Masaj",
                            Price = 250m
                        },
                        new
                        {
                            Id = 8,
                            DurationMinutes = 15,
                            Name = "Saç Yıkama",
                            Price = 20m
                        },
                        new
                        {
                            Id = 9,
                            DurationMinutes = 30,
                            Name = "Yüz Temizleme",
                            Price = 100m
                        },
                        new
                        {
                            Id = 10,
                            DurationMinutes = 20,
                            Name = "Bıyık Şekillendirme",
                            Price = 30m
                        });
                });

            modelBuilder.Entity("WEB.Models.Randevu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AppointmentTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("HizmetId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SalonId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HizmetId");

                    b.HasIndex("SalonId");

                    b.HasIndex("UserId");

                    b.ToTable("Randevular");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AppointmentTime = new DateTime(2024, 12, 13, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            HizmetId = 1,
                            Price = 50m,
                            SalonId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            AppointmentTime = new DateTime(2024, 12, 14, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            HizmetId = 2,
                            Price = 80m,
                            SalonId = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            AppointmentTime = new DateTime(2024, 12, 15, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            HizmetId = 3,
                            Price = 100m,
                            SalonId = 3,
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            AppointmentTime = new DateTime(2024, 12, 16, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            HizmetId = 4,
                            Price = 150m,
                            SalonId = 4,
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            AppointmentTime = new DateTime(2024, 12, 17, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            HizmetId = 5,
                            Price = 200m,
                            SalonId = 5,
                            UserId = 5
                        },
                        new
                        {
                            Id = 6,
                            AppointmentTime = new DateTime(2024, 12, 18, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            HizmetId = 6,
                            Price = 40m,
                            SalonId = 6,
                            UserId = 6
                        },
                        new
                        {
                            Id = 7,
                            AppointmentTime = new DateTime(2024, 12, 19, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            HizmetId = 7,
                            Price = 250m,
                            SalonId = 7,
                            UserId = 7
                        },
                        new
                        {
                            Id = 8,
                            AppointmentTime = new DateTime(2024, 12, 20, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            HizmetId = 8,
                            Price = 100m,
                            SalonId = 8,
                            UserId = 8
                        },
                        new
                        {
                            Id = 9,
                            AppointmentTime = new DateTime(2024, 12, 21, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            HizmetId = 1,
                            Price = 50m,
                            SalonId = 9,
                            UserId = 9
                        },
                        new
                        {
                            Id = 10,
                            AppointmentTime = new DateTime(2024, 12, 22, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            HizmetId = 2,
                            Price = 80m,
                            SalonId = 10,
                            UserId = 10
                        });
                });

            modelBuilder.Entity("WEB.Models.Salon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Salonlar");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ContactNumber = "02124567890",
                            Location = "İstanbul",
                            Name = "Elite Güzellik Salonu"
                        },
                        new
                        {
                            Id = 2,
                            ContactNumber = "03124567890",
                            Location = "Ankara",
                            Name = "Lüks Kuaför"
                        },
                        new
                        {
                            Id = 3,
                            ContactNumber = "02324567890",
                            Location = "İzmir",
                            Name = "Güzellik Merkezi"
                        },
                        new
                        {
                            Id = 4,
                            ContactNumber = "02424567890",
                            Location = "Antalya",
                            Name = "Bakım ve Spa"
                        },
                        new
                        {
                            Id = 5,
                            ContactNumber = "02224567890",
                            Location = "Bursa",
                            Name = "Zen Saç Stüdyosu"
                        },
                        new
                        {
                            Id = 6,
                            ContactNumber = "03224567890",
                            Location = "Adana",
                            Name = "Royal Saç Merkezi"
                        },
                        new
                        {
                            Id = 7,
                            ContactNumber = "03424567890",
                            Location = "Gaziantep",
                            Name = "Luxury Hair"
                        },
                        new
                        {
                            Id = 8,
                            ContactNumber = "03524567890",
                            Location = "Kayseri",
                            Name = "Dream Spa"
                        },
                        new
                        {
                            Id = 9,
                            ContactNumber = "02224567891",
                            Location = "Eskişehir",
                            Name = "Modern Güzellik"
                        },
                        new
                        {
                            Id = 10,
                            ContactNumber = "03324567890",
                            Location = "Konya",
                            Name = "Prestij Bakım Merkezi"
                        });
                });

            modelBuilder.Entity("WEB.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "ahmet.yilmaz@gmail.com",
                            Name = "Ahmet Yılmaz",
                            PasswordHash = "AQAAAAIAAYagAAAAEGcgQePWG1oKhIRxPC+0MgW2HMgvcAg2XkB8uGRiC8rJE/zgKTUupNJZLJ/QNx9rqw==",
                            Phone = "05331234567"
                        },
                        new
                        {
                            Id = 2,
                            Email = "ayse.demir@gmail.com",
                            Name = "Ayşe Demir",
                            PasswordHash = "AQAAAAIAAYagAAAAEEgaCd6rRR5cfZJznVnsw/hcOjSVmf8pcpZZA3mOJn5ei32JW+W1ipLISlZjhX0onA==",
                            Phone = "05339876543"
                        },
                        new
                        {
                            Id = 3,
                            Email = "fatma.celik@gmail.com",
                            Name = "Fatma Çelik",
                            PasswordHash = "AQAAAAIAAYagAAAAEFeD8b+0LAx/KG2gwRIj56ra2dDrPq5ZTjHeAeF4jOdbpu94DvBnVoHcdhulqtxRrg==",
                            Phone = "05431234567"
                        },
                        new
                        {
                            Id = 4,
                            Email = "mehmet.kara@gmail.com",
                            Name = "Mehmet Kara",
                            PasswordHash = "AQAAAAIAAYagAAAAEKgWzhvb7y8Z7mFZzDMd497aSr8LZq4L76BAaC6Io5295O2M0zy8TbVauiMI/hvGWA==",
                            Phone = "05439876543"
                        },
                        new
                        {
                            Id = 5,
                            Email = "ali.can@gmail.com",
                            Name = "Ali Can",
                            PasswordHash = "AQAAAAIAAYagAAAAEF5fU+NkLU51g9s4kpR71nLjMIbf23a6sBXGuLQ0H62CYruX1LNRA97fgopYPbNr/w==",
                            Phone = "05551234567"
                        },
                        new
                        {
                            Id = 6,
                            Email = "merve.sen@gmail.com",
                            Name = "Merve Şen",
                            PasswordHash = "AQAAAAIAAYagAAAAEGq/+qGBIRZcm2x+1wSf8AAh4I1D2x34KEf6NVqDohcLiVTlFW7KUvXI7HY0x680VA==",
                            Phone = "05631234567"
                        },
                        new
                        {
                            Id = 7,
                            Email = "burak.arslan@gmail.com",
                            Name = "Burak Arslan",
                            PasswordHash = "AQAAAAIAAYagAAAAEJbAmY5sn5VwiDjmnbjqh24S6H8coERSWHSqbCn2Fq47Ho6nufkm0JLXHjMVCXHfiA==",
                            Phone = "05471234567"
                        },
                        new
                        {
                            Id = 8,
                            Email = "emre.yildiz@gmail.com",
                            Name = "Emre Yıldız",
                            PasswordHash = "AQAAAAIAAYagAAAAEAfuqZIrNk5vs8lut4C5o7Y3vDXfcx0PaxsNjd29gsXQkaZ9L9w6Ha9hSzRiIUKmuw==",
                            Phone = "05381234567"
                        },
                        new
                        {
                            Id = 9,
                            Email = "elif.gul@gmail.com",
                            Name = "Elif Gül",
                            PasswordHash = "AQAAAAIAAYagAAAAEGib6z6Kogb3W/HDdb3lSbFogtmxjcr/NigxT3pRLaBsue/N2eRgecNf2XRMnzGOKg==",
                            Phone = "05569876543"
                        },
                        new
                        {
                            Id = 10,
                            Email = "huseyin.demir@gmail.com",
                            Name = "Hüseyin Demir",
                            PasswordHash = "AQAAAAIAAYagAAAAEAeWKjxCCPq2wX9Xc6sAbGLIP2+Y+RIexk4yFOc8xylJ688i2Utf6QuiLfUmcLY1Kw==",
                            Phone = "05351239876"
                        });
                });

            modelBuilder.Entity("WEB.Models.Calisan", b =>
                {
                    b.HasOne("WEB.Models.Salon", "Salon")
                        .WithMany("Calisanlar")
                        .HasForeignKey("SalonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Salon");
                });

            modelBuilder.Entity("WEB.Models.CalismaSaati", b =>
                {
                    b.HasOne("WEB.Models.Calisan", "Calisan")
                        .WithMany("CalismaSaatleri")
                        .HasForeignKey("CalisanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Calisan");
                });

            modelBuilder.Entity("WEB.Models.Randevu", b =>
                {
                    b.HasOne("WEB.Models.Hizmet", "Hizmet")
                        .WithMany()
                        .HasForeignKey("HizmetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WEB.Models.Salon", "Salon")
                        .WithMany("Randevular")
                        .HasForeignKey("SalonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WEB.Models.User", "User")
                        .WithMany("Randevular")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hizmet");

                    b.Navigation("Salon");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WEB.Models.Calisan", b =>
                {
                    b.Navigation("CalismaSaatleri");
                });

            modelBuilder.Entity("WEB.Models.Salon", b =>
                {
                    b.Navigation("Calisanlar");

                    b.Navigation("Randevular");
                });

            modelBuilder.Entity("WEB.Models.User", b =>
                {
                    b.Navigation("Randevular");
                });
#pragma warning restore 612, 618
        }
    }
}
